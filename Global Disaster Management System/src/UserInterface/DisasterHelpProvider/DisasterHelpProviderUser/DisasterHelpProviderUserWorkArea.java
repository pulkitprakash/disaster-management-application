/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DisasterHelpProvider.DisasterHelpProviderUser;


import BusinessModel.DisasterHelpProvider.DisasterHelpProvider;
import BusinessModel.EcoSystem;
import BusinessModel.Enterprise.Enterprise;
import BusinessModel.Organization.DisasterHelpProviderOrganization;
//import BusinessModel.Organization.FundRaisingOrganization;
import BusinessModel.Organization.Organization;
import BusinessModel.Role.DisasterHelpProviderRole;
import BusinessModel.Role.DoctorUserRole;
import BusinessModel.Role.EmergencyAssistanceProviderRole;
import static BusinessModel.Role.Role.RoleType.EmergencyAssistanceProviderRole;

import BusinessModel.UserAccount.UserAccount;
import BusinessModel.WorkQueue.CustomerWorkReq;
import BusinessModel.WorkQueue.WorkQueue;
import BusinessModel.WorkQueue.WorkReq;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author pulkitprakash
 */
public class DisasterHelpProviderUserWorkArea extends javax.swing.JPanel {

    private JPanel downJPanel;
    private UserAccount UserAccount;
    private Organization org;
    private Enterprise Enterprise;
    private EcoSystem ESystem;
    DisasterHelpProvider hp;
    /**
     * Creates new form HelpProviderUserWorkArea
     */
    public DisasterHelpProviderUserWorkArea(JPanel downJPanel,UserAccount UserAccount,Organization org,Enterprise Enterprise,EcoSystem ESystem) {
        initComponents();
        this.downJPanel=downJPanel;
        this.UserAccount=UserAccount;
        this.org=org;
        this.Enterprise=Enterprise;
        this.ESystem=ESystem;
        completeWorkBtn.setEnabled(false);
        
         for (DisasterHelpProvider helpProvider : ((DisasterHelpProviderOrganization)org).getHelpproviderlist().getHelpProviderDirectory()) {
            if (UserAccount.getEmployee().getEmpname().equals(helpProvider.getName())) {
                 hp=helpProvider;
            }
        }
        if (hp.getWorkQueue() == null) {
            WorkQueue w = new WorkQueue();
            hp.setWorkQueue(w);
        }
        
       
        populateWorkQueueTable();
    }
    
     public void populateWorkQueueTable(){
         DefaultTableModel model = (DefaultTableModel) WorkReqJTable.getModel();
        
        model.setRowCount(0);
        
        
        for (WorkReq work : ESystem.getWorkQueue().getWorkRequestList()){
           if(work instanceof CustomerWorkReq){ 
            Object[] row = new Object[10];
            row[0] = work.getSender().getEmployee().getEmpname();
            row[1] = work.getSubject();
            row[2] = ((CustomerWorkReq) work).getDescription();
            row[3] = ((CustomerWorkReq) work).getLocation();
            row[4] = work.getDateOfRequest();
            row[5] = work;
            row[6] = work.getReciever();
            
            model.addRow(row);
           }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        WorkReqJTable = new javax.swing.JTable();
        assignWorkBtn = new javax.swing.JButton();
        completeWorkBtn = new javax.swing.JButton();
        reqNGOBtn = new javax.swing.JButton();
        reqDocBtn = new javax.swing.JButton();
        locationTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionTxt = new javax.swing.JTextArea();
        subjectTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        viewBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        requestAnalysisBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 1, 24)); // NOI18N
        jLabel1.setText("Disaster Help Provider User Work Area");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 36, -1, -1));

        WorkReqJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Subject", "Description", "Location", "Date", "Status", "Help Provider"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(WorkReqJTable);

        assignWorkBtn.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        assignWorkBtn.setText("ASSIGN TO ME");
        assignWorkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignWorkBtnActionPerformed(evt);
            }
        });

        completeWorkBtn.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        completeWorkBtn.setText("COMPLETE");
        completeWorkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeWorkBtnActionPerformed(evt);
            }
        });

        reqNGOBtn.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        reqNGOBtn.setText("FORWARD REQUEST TO EMERGENCY ASSISTANCE PROVIDER");
        reqNGOBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqNGOBtnActionPerformed(evt);
            }
        });

        reqDocBtn.setText("FORWARD REQUEST TO DOCTOR");
        reqDocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqDocBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel6.setText("Location:");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel5.setText("Description:");

        descriptionTxt.setColumns(20);
        descriptionTxt.setRows(5);
        jScrollPane2.setViewportView(descriptionTxt);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel4.setText("Subject: ");

        viewBtn.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        viewBtn.setText("VIEW");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/disaster-help-provider.jpeg"))); // NOI18N

        requestAnalysisBtn.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        requestAnalysisBtn.setText("REQUEST ANALYSIS");
        requestAnalysisBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestAnalysisBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(350, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(subjectTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel5)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assignWorkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(requestAnalysisBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(completeWorkBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(reqNGOBtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(reqDocBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignWorkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(completeWorkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reqNGOBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reqDocBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(requestAnalysisBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel4))
                            .addComponent(subjectTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6))
                            .addComponent(locationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignWorkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignWorkBtnActionPerformed
        int selectedRow = WorkReqJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please first select a row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
              
            CustomerWorkReq cswr = (CustomerWorkReq) WorkReqJTable.getValueAt(selectedRow, 5);
           
            if(cswr.getStatus().equals("Complete"))
            {
               JOptionPane.showMessageDialog(null, "Cant Assign because Request is already completed !!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                cswr.setStatus("Pending");
                cswr.setReciever(UserAccount);

                populateWorkQueueTable();
                completeWorkBtn.setEnabled(true);
            }

        }
    }//GEN-LAST:event_assignWorkBtnActionPerformed

    private void completeWorkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeWorkBtnActionPerformed
        int selectedRow = WorkReqJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please first select a row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        else

        {
             
            CustomerWorkReq hs = (CustomerWorkReq) WorkReqJTable.getValueAt(selectedRow, 5);
            
                if(hs.getStatus().equals("Complete"))
                { JOptionPane.showMessageDialog(null, "Request is already completed !!", "Warning", JOptionPane.WARNING_MESSAGE);}
                else
                {
                hs.setStatus("Complete");
                JOptionPane.showMessageDialog(null, "The request has been completed successfully");
                populateWorkQueueTable();
                completeWorkBtn.setEnabled(false);
            
                }
        }
    }//GEN-LAST:event_completeWorkBtnActionPerformed

    private void reqNGOBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqNGOBtnActionPerformed
        int selectedRow = WorkReqJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please request to forward to the Emergency Assistance Provider", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            CustomerWorkReq hswr = (CustomerWorkReq) WorkReqJTable.getValueAt(selectedRow, 5);
            if(hswr.getStatus().equals("Complete"))
            { JOptionPane.showMessageDialog(null, "Request is already completed !!", "Warning", JOptionPane.WARNING_MESSAGE); }
            else
            {
            
            
                hswr.setStatus("Assigned To Emergency Assistance Provider");
                populateWorkQueueTable();
            
            }
        }
    }//GEN-LAST:event_reqNGOBtnActionPerformed

    private void reqDocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqDocBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = WorkReqJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please request to forward to the Doctor", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            CustomerWorkReq hswr = (CustomerWorkReq) WorkReqJTable.getValueAt(selectedRow, 5);
            
            if(hswr.getStatus().equals("Complete"))
            { JOptionPane.showMessageDialog(null, "Request is already completed !!", "Warning", JOptionPane.WARNING_MESSAGE); }
            
            else
            {
            
            
                hswr.setStatus("Assigned To Doctor");
                populateWorkQueueTable();
            
           
            }
        }

    }//GEN-LAST:event_reqDocBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        int selectedRow = WorkReqJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            CustomerWorkReq p = (CustomerWorkReq) WorkReqJTable.getValueAt(selectedRow, 5);
            subjectTxt.setText(p.getSubject());
            descriptionTxt.setText(p.getDescription());
            locationTxt.setText(p.getLocation());
        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void requestAnalysisBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestAnalysisBtnActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset d = new DefaultCategoryDataset();
        int a=0;
        int b=0;
        int c=0;
        for (WorkReq work : ESystem.getWorkQueue().getWorkRequestList()){
            if(work instanceof CustomerWorkReq){
                if(work.getReciever().getRole() instanceof EmergencyAssistanceProviderRole){
                    a = a+1;
                }
                else if(work.getReciever().getRole() instanceof DisasterHelpProviderRole){
                    b = b+1;
                }
                else if(work.getReciever().getRole() instanceof DoctorUserRole){
                    c = c+1;
                }
            }
        }
        d.setValue(a, "Completed By","Emergency Assistance Provider");
        d.setValue(b, "Completed By","Disaster Help Provider");
        d.setValue(c, "Completed By","Doctor");

        JFreeChart chart = ChartFactory.createBarChart("Request Fulfilled", "Completed By", "Number Of Requests", d, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.blue);
        ChartFrame f = new ChartFrame("Request Analysis",chart);
        f.setVisible(true);
        f.setSize(500,400);
        
    }//GEN-LAST:event_requestAnalysisBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable WorkReqJTable;
    private javax.swing.JButton assignWorkBtn;
    private javax.swing.JButton completeWorkBtn;
    private javax.swing.JTextArea descriptionTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField locationTxt;
    private javax.swing.JButton reqDocBtn;
    private javax.swing.JButton reqNGOBtn;
    private javax.swing.JButton requestAnalysisBtn;
    private javax.swing.JTextField subjectTxt;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
